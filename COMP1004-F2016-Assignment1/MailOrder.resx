<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEsAAABLCAYAAAA4TnrqAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAGYktHRAD/AP8A/6C9p5MAAAAHdElNRQfgCRQTGgHRscT/
        AAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAA45JREFUeF7tl81xVEEMhJ0KQXAg
        GlIgM07EQDacuRmNy24+i55Bb9/Pju3pqu8yryW1dNiqfVhaWlpasno8iA8ht/gtfAi5xW/h3UpL/n78
        fAjsGVD52wtvRgrtFr8F9gyo/O2FNyOFdovfAnsGVP72wtRSULfskVRm0RNMJ4Vz4Y+kMoueYDopnAt/
        JJVZ9ATTSeFc+CtghmBqKahb5AqYIZhaCuoWuQJmCKaWgrpFGo+/fmzC9RjBDMHUUlC3SMMdZITrMYIZ
        gqmloG6RhjvICNdjBDME00nhekvy/QyYIZhaCsoF1rG8FJQLrGN5KahbpEqlT8/D92BqKSgX2EqlT8/D
        92BqKSgX2EqlT8/D9+DNSKG5TIVKbc/D96CniudSKRCXqVCp7Xn4HvRU8VwqBeIyFSq1PQ/fg54qnkul
        QFyGVDxbYc8eA//dpBAMRyqerbBnj4H/blIIhiMVz1bYs8fAP4UUiEEJPRV6tZ++/fwvrCXsE9xNCuFC
        Nuip0Kt1x8mwlrBPcDcphAvZoKdCr9YdJ8Nawj7BpdJg/pHmuwtchX3cQUa4fg32DC6VBq9j/V8avI71
        V3nIEy5ko3e4rbCPmzPCHaqRZpyiPOQJF7LBJV1dFfZxc0a4QzXSjFOUhzzhQja4pKurwj5uzgh3qEaa
        cZjU1IWpwoW3wj7Ms5NTpAEMvRV3hCrswzw7OUUawNBbcUeowj7Ms5NTpAEMfRS9oxBmCKaWgrpF9rKO
        tYH3cCyFc+FHbK1dx9pQu461ofZDHIueHq4us471jKvLrGM94+oy7+pY7k9ohn7CQ+wh9Z1OCueOk6Gf
        uMVvIfWdTgrnjpOhn7jFbyH1nU4K546ToZ+4359GxdODtcEUUiB3nAz9xC3bqHh6sDaYQgrkjpOhn7hl
        GxVPD9YG0ykHHOIWbCQfpXdXN4K1wRTKoYa4pRrJR+nd1Y1gbTCFcqghbqlG8lF6d3UjWBtMLQX9/vWL
        hZ6gIvldvwz9wdRSULdIg56gIvldvwz9wdRSULdIg56gIvldvwz9wd2Ug/yDC59JNRXJ7/pl6B9wutzQ
        V7jwmVRTkfyuX4b+AafLDX2FC59JNRXJ7/pl6B9wujTMhazCPkFF8rt+VdgnOF0a5sJUYZ+gIvldvyrs
        E5wuDXNhqrBPUJH8rl8V9glOVx54BBW5ur2cLjd0LxW5ur2cLjd0LxW5ur0sLU2nh4c/KSMxc3Gh59MA
        AAAASUVORK5CYII=
</value>
  </data>
</root>